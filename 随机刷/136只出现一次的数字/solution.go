package leetcode

//二进制 异或
//我们知道异或的一个性质是：任何一个数字异或它自己都等于0。
//也就是说，如果我们从头到尾依次异或数组中的每一个数字，那么最终的结果刚好是那个只出现一次的数字。
//比如数组{4,5,5}，我们先用数组中的第一个元素4（二进制形式：0100）和数组中的第二个元素5（二进制形式：0101）进行异或操作，0100和0101异或得到0001，
//用这个得到的元素与数组中的三个元素5（二进制形式：0101）进行异或操作，0001和0101异或得到0100，正好是结果数字4。
func singleNumber(nums []int) int {
	var res int
	for _, v := range nums {
		res = res ^ v
	}
	return 0
}
